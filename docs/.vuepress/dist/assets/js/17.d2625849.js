(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{271:function(t,a,e){"use strict";e.r(a);var s=e(0),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"vue生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue生命周期"}},[t._v("#")]),t._v(" vue生命周期")]),t._v(" "),e("h2",{attrs:{id:"beforecreate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beforecreate"}},[t._v("#")]),t._v(" beforeCreate")]),t._v(" "),e("ul",[e("li",[t._v("在实例初始化之后，数据观测 (data observer) 和 event/watcher 事件配置之前被调用。")])]),t._v(" "),e("h2",{attrs:{id:"created"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#created"}},[t._v("#")]),t._v(" created")]),t._v(" "),e("ul",[e("li",[t._v("在实例创建完成后被立即调用。在这一步，实例已完成以下的配置：数据观测 (data observer)，属性和方法的运算，watch/event 事件回调。然而，挂载阶段还没开始，$el 属性目前不可见。")])]),t._v(" "),e("h2",{attrs:{id:"beforemount-该钩子在服务器端渲染期间不被调用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beforemount-该钩子在服务器端渲染期间不被调用"}},[t._v("#")]),t._v(" beforeMount (该钩子在服务器端渲染期间不被调用)")]),t._v(" "),e("ul",[e("li",[t._v("在挂载开始之前被调用：相关的 render 函数首次被调用。")])]),t._v(" "),e("h2",{attrs:{id:"mounted-该钩子在服务器端渲染期间不被调用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mounted-该钩子在服务器端渲染期间不被调用"}},[t._v("#")]),t._v(" mounted (该钩子在服务器端渲染期间不被调用)")]),t._v(" "),e("ul",[e("li",[t._v("el 被新创建的 vm.$el 替换，并挂载到实例上去之后调用该钩子。如果 root 实例挂载了一个文档内元素，当 mounted 被调用时 vm.$el 也在文档内。")]),t._v(" "),e("li",[t._v("注意 mounted 不会承诺所有的子组件也都一起被挂载。如果你希望等到整个视图都渲染完毕，可以用 vm.$nextTick 替换掉 mounted：")])]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("mounted")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("$nextTick")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Code that will run only after the")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// entire view has been rendered")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"beforeupdate-该钩子在服务器端渲染期间不被调用，因为只有初次渲染会在服务端进行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beforeupdate-该钩子在服务器端渲染期间不被调用，因为只有初次渲染会在服务端进行"}},[t._v("#")]),t._v(" beforeUpdate (该钩子在服务器端渲染期间不被调用，因为只有初次渲染会在服务端进行)")]),t._v(" "),e("ul",[e("li",[t._v("数据更新时调用，发生在虚拟 DOM 打补丁之前。这里适合在更新之前访问现有的 DOM，比如手动移除已添加的事件监听器。")])]),t._v(" "),e("h2",{attrs:{id:"updated-该钩子在服务器端渲染期间不被调用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#updated-该钩子在服务器端渲染期间不被调用"}},[t._v("#")]),t._v(" updated (该钩子在服务器端渲染期间不被调用)")]),t._v(" "),e("ul",[e("li",[t._v("由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。")]),t._v(" "),e("li",[t._v("当这个钩子被调用时，组件 DOM 已经更新，所以你现在可以执行依赖于 DOM 的操作。然而在大多数情况下，你应该避免在此期间更改状态。如果要相应状态改变，通常最好使用计算属性或 watcher 取而代之。")]),t._v(" "),e("li",[t._v("注意 updated 不会承诺所有的子组件也都一起被重绘。如果你希望等到整个视图都重绘完毕，可以用 vm.$nextTick 替换掉 updated：")])]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("updated")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("$nextTick")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Code that will run only after the")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// entire view has been re-rendered")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"activated-该钩子在服务器端渲染期间不被调用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#activated-该钩子在服务器端渲染期间不被调用"}},[t._v("#")]),t._v(" activated (该钩子在服务器端渲染期间不被调用)")]),t._v(" "),e("ul",[e("li",[t._v("keep-alive 组件激活时调用。")])]),t._v(" "),e("h2",{attrs:{id:"deactivated-该钩子在服务器端渲染期间不被调用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deactivated-该钩子在服务器端渲染期间不被调用"}},[t._v("#")]),t._v(" deactivated (该钩子在服务器端渲染期间不被调用)")]),t._v(" "),e("ul",[e("li",[t._v("keep-alive 组件停用时调用。")])]),t._v(" "),e("h2",{attrs:{id:"beforedestroy-该钩子在服务器端渲染期间不被调用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beforedestroy-该钩子在服务器端渲染期间不被调用"}},[t._v("#")]),t._v(" beforeDestroy (该钩子在服务器端渲染期间不被调用)")]),t._v(" "),e("ul",[e("li",[t._v("实例销毁之前调用。在这一步，实例仍然完全可用。")])]),t._v(" "),e("h2",{attrs:{id:"destroyed-该钩子在服务器端渲染期间不被调用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#destroyed-该钩子在服务器端渲染期间不被调用"}},[t._v("#")]),t._v(" destroyed (该钩子在服务器端渲染期间不被调用)")]),t._v(" "),e("ul",[e("li",[t._v("Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。")])]),t._v(" "),e("h2",{attrs:{id:"errorcaptured"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#errorcaptured"}},[t._v("#")]),t._v(" errorCaptured")]),t._v(" "),e("ul",[e("li",[t._v("类型：(err: Error, vm: Component, info: string) => ?boolean")]),t._v(" "),e("li",[t._v("当捕获一个来自子孙组件的错误时被调用。此钩子会收到三个参数：错误对象、发生错误的组件实例以及一个包含错误来源信息的字符串。此钩子可以返回 false 以阻止该错误继续向上传播。")]),t._v(" "),e("li",[t._v("错误传播规则\n"),e("ul",[e("li",[t._v("默认情况下，如果全局的 config.errorHandler 被定义，所有的错误仍会发送它，因此这些错误仍然会向单一的分析服务的地方进行汇报。")]),t._v(" "),e("li",[t._v("如果一个组件的继承或父级从属链路中存在多个 errorCaptured 钩子，则它们将会被相同的错误逐个唤起。")]),t._v(" "),e("li",[t._v("如果此 errorCaptured 钩子自身抛出了一个错误，则这个新错误和原本被捕获的错误都会发送给全局的 config.errorHandler。")]),t._v(" "),e("li",[t._v("一个 errorCaptured 钩子能够返回 false 以阻止错误继续向上传播。本质上是说“这个错误已经被搞定了且应该被忽略”。它会阻止其它任何会被这个错误唤起的 errorCaptured 钩子和全局的 config.errorHandler。")])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);