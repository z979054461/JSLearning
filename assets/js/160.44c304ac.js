(window.webpackJsonp=window.webpackJsonp||[]).push([[160],{762:function(s,n,t){"use strict";t.r(n);var a=t(4),r=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"heading"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#heading"}},[s._v("#")]),s._v(" Heading")]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul")]),t("p"),s._v(" "),t("p",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/unique-binary-search-trees/description/",target:"_blank",rel:"noopener noreferrer"}},[s._v("96.不同的二叉搜索树"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("Tags:   algorithms   snapchat   dynamic-programming   tree")]),s._v(" "),t("p",[s._v("Langs:  c   cpp   csharp   golang   java   javascript   kotlin   php   python   python3   racket   ruby   rust   scala   swift   typescript")]),s._v(" "),t("ul",[t("li",[s._v("algorithms")]),s._v(" "),t("li",[s._v("Medium (69.23%)")]),s._v(" "),t("li",[s._v("Likes:    963")]),s._v(" "),t("li",[s._v("Dislikes: -")]),s._v(" "),t("li",[s._v("Total Accepted:    100.9K")]),s._v(" "),t("li",[s._v("Total Submissions: 145.7K")]),s._v(" "),t("li",[s._v("Testcase Example:  '3'")])]),s._v(" "),t("p",[s._v("给定一个整数 "),t("em",[s._v("n")]),s._v("，求以 1 ... "),t("em",[s._v("n")]),s._v(" 为节点组成的二叉搜索树有多少种？")]),s._v(" "),t("p",[t("strong",[s._v("示例:")])]),s._v(" "),t("pre",[t("strong",[s._v("输入:")]),s._v(" 3\n"),t("strong",[s._v("输出:")]),s._v(" 5\n"),t("strong",[s._v("解释:\n")]),s._v("给定 "),t("em",[s._v("n")]),s._v(" = 3, 一共有 5 种不同结构的二叉搜索树:\n\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\r\n * @lc app=leetcode.cn id=96 lang=javascript\r\n *\r\n * [96] 不同的二叉搜索树\r\n */")]),s._v("\r\n\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// @lc code=start")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 核心思想：给定序列 1 …… n，我们选择数字 ii 作为根，则根为 ii 的所有二叉搜索树的集合是左子树集合和右子树集合的笛卡尔积，对于笛卡尔积中的每个元素，加上根节点之后形成完整的二叉搜索树")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0   1")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1   1       1")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2   2       f(1) + f(1)")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3   5       f(2) + f(1)*f(1) + f(2)")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4   14      f(3) + f(1)*f(2) + f(2)*f(1) + f(3)")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 5   42      f(4) + f(1)*f(3) + f(2)*f(2) + f(3)*f(1) + f(4)")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 6   132     ")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 卡特兰数 卧槽……")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// C(n/2n)/n+1")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\r\n * @param {number} n\r\n * @return {number}\r\n */")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("numTrees")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("n")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\r\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" ret "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\r\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\r\n        ret "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("ret"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("ret"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\r\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" ret "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// var numTrees = function (n) {")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     let ret = 1n;")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     n = BigInt(n);")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     for (let i = 2n * n; i >= 1n; i--)")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//         ret = (i <= n) ? ret / i : ret * i;")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     return ret / (n + 1n)")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// };")]),s._v("\r\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// @lc code=end")]),s._v("\r\n\r\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br")])])])}),[],!1,null,null,null);n.default=r.exports}}]);