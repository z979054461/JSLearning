(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{678:function(a,t,e){"use strict";e.r(t);var s=e(4),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"heading"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#heading"}},[a._v("#")]),a._v(" Heading")]),a._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#百分比"}},[a._v("%百分比")])]),e("li",[e("a",{attrs:{href:"#px"}},[a._v("px")])]),e("li",[e("a",{attrs:{href:"#em"}},[a._v("em")])]),e("li",[e("a",{attrs:{href:"#rem"}},[a._v("rem")])]),e("li",[e("a",{attrs:{href:"#vh-和-vw"}},[a._v("vh 和 vw")])]),e("li",[e("a",{attrs:{href:"#vmin-和-vmax"}},[a._v("vmin 和 vmax")])]),e("li",[e("a",{attrs:{href:"#ex-和-ch"}},[a._v("ex 和 ch")])]),e("li",[e("a",{attrs:{href:"#其他"}},[a._v("其他")])])])]),e("p"),a._v(" "),e("h2",{attrs:{id:"百分比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#百分比"}},[a._v("#")]),a._v(" %百分比")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("百分比不能算是一种单位，可以理解为包含数值和单位的数据，不管离子元素最近的父元素的该属性是什么单位，都是将 数值*百分比+单位 计算出child的属性值。\npadding和margin的值为百分比是相对于父元素的width计算的，不管是padding-left,还是padding-top\n")])])]),e("h2",{attrs:{id:"px"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#px"}},[a._v("#")]),a._v(" px")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("像素 (计算机屏幕上的一个点)\n")])])]),e("h2",{attrs:{id:"em"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#em"}},[a._v("#")]),a._v(" em")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("单位转为像素值，取决于他们使用的字体大小。 此字体大小受从父元素继承过来的字体大小，除非显式重写与一个具体单位。\n相对于当前对象内文本的字体尺寸。例如： \n1em 等于当前的字体尺寸； \n2em 等于当前字体尺寸的两倍。 \n如果某元素以 12pt 显示，那么 2em 是24pt。 \n在 CSS 中，em 是非常有用的单位，因为它可以自动适应用户所使用的字体。\n")])])]),e("h2",{attrs:{id:"rem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rem"}},[a._v("#")]),a._v(" rem")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("使用rem同em一样皆为相对字体大小单位，不同的是rem相对的是HTML根元素。 \nrem中的“r”代表“root”，这意味着设置当前元素的字体大小的基准为根元素，大多数情况下，我们会设置在html元素上。\n")])])]),e("h2",{attrs:{id:"vh-和-vw"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vh-和-vw"}},[a._v("#")]),a._v(" vh 和 vw")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("在进行响应式布局时，我们常常会使用百分比来布局，然而CSS的百分比不总是解决每个问题的最佳方案，CSS的宽度相对于离它最近的父元素的宽度。 如果你想使用视口的宽度、高度而不是父元素的宽高，可以使用vh和vw单位。\nvh = viewportHeight * 1/100; \nvw = viewportWidth * 1/100;\n使用vh、vw就可以保证元素的宽高适应不同设备。\n")])])]),e("h2",{attrs:{id:"vmin-和-vmax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vmin-和-vmax"}},[a._v("#")]),a._v(" vmin 和 vmax")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("vw和vh对应于viewport的width和height，而vmin和vmax分别对应于width、height中的最小值和最大值，例如如果浏览器的宽/高被设置为1000px/600px，那么\nvmin = 600 * 1/100;\nvmax = 1000 * 1/100;\n")])])]),e("h2",{attrs:{id:"ex-和-ch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ex-和-ch"}},[a._v("#")]),a._v(" ex 和 ch")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("ex、ch单位与em、rem相似之处在于都依赖于font-size，但是ex、ch还依赖于font-family，基于font-specific来计算\n")])])]),e("h2",{attrs:{id:"其他"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[a._v("#")]),a._v(" 其他")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("in英寸\ncm厘米\nmm毫米\npt磅 (1 pt 等于 1/72 英寸)\npc12 点活字 (1 pc 等于 12 点)\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);